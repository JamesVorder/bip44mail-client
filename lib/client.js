var lightwallet = require('eth-lightwallet');
var fs = require('fs');
var util = require("ethereumjs-util");
var request = require("request");

function Client (keystore, path){
  if(keystore){
    this.keystore = lightwallet.keystore.deserialize(JSON.stringify(keystore));
  }
  if(path){
    this.path = path;
  }
}

Client.prototype.addAddress = function (password, callback) {
  //TODO: Make a call to the server with a signature generated by the new address.
  //This should start the ball rolling for address registration
  this.keystore.keyFromPassword(password, (function (err, pwDerivedKey) {
    if (err) {
      callback(err, undefined)
    } else {
      this.keystore.generateNewAddress(pwDerivedKey, 1);
      callback(undefined, this.keystore.getAddresses());
    }
  }).bind(this));
};

Client.prototype.signMessage = function (message, password, addr, callback) {
  this.keystore.keyFromPassword(password, (function (err, derivedKey) {
    if (err) {
      callback(err, undefined);
    } else {
      var sig = lightwallet.signing.signMsg(this.keystore, derivedKey, message, addr);
      callback(undefined, sig);
    }
  }).bind(this ));
};

Client.prototype.SendMail = function(to, from_addr, subject, message, signature){
    request.post(
    'http://localhost:3000/send',
    {
        json: {
            signature: JSON.stringify(signature),
            address: from_addr,
            to: to,
            from: from_addr,
            subject: subject,
            message: message
        }
    },
    function (error, response) {
        if(error) {
            console.log("Error: " + error);
        }
        else {
            console.log('Success: ' + response.data);
        }
    });
};

Client.prototype.registerAddress = function(signature, address){
  request.post(
    'http://localhost:3000/create_inbox',
    {
      json: {
        signature: JSON.stringify(signature),
        address: address
      }
    },
    function(error, response){
      if(error){
        console.log("Error: " + error);
      } else{
        console.log("Success: " + response.data)
      }
    }
  )
};

Client.prototype.getAddresses = function(){
  return this.keystore.getAddresses();
};

module.exports = Client;